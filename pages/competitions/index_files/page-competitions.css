h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-family: fira-sans, sans-serif;
  font-weight: 400;
}

p {
  margin-bottom: 0;
}

.section--mostPopular .btn {
  -webkit-transform: translateY(-2px);
          transform: translateY(-2px);
  text-transform: uppercase;
  color: #212426;
  font-family: fira-sans, sans-serif;
  font-size: 1.375rem;
  font-weight: 700;
  line-height: 1.75rem;
}

.section--sponsoredContent .articleSnippet-title a {
  color: #212426;
  font-size: 1rem;
  line-height: 1.625rem;
}

.section--mostPopular .sidebarWidget-header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 0;
  padding: 0;
}

.section--mostPopular .btn {
  -webkit-transition: all 0.4s ease-in-out;
  transition: all 0.4s ease-in-out;
  background-color: #f2f2f2;
  min-height: 86px;
  color: rgba(33, 36, 38, 0.3);
  font-size: 0.875rem;
}

.section--mostPopular .btn.is-active {
  background-color: #fafafa;
  color: #212426;
  pointer-events: none;
}
@media (min-width: 23.4375em) {
  .section--mostPopular .btn.is-active {
    font-size: 1.375rem;
  }
}

.section--mostPopular .btn--mostPop {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 203px;
          flex: 0 0 203px;
  max-width: 203px;
}

.section--mostPopular .btn--latest {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 calc(100% - 203px);
          flex: 0 0 calc(100% - 203px);
  max-width: calc(100% - 203px);
}

.section--mostPopular .articleSnippet-list {
  display: none;
  padding-left: 0;
  list-style: none;
  counter-reset: li;
}

.section--mostPopular .articleSnippet-list.is-active {
  display: block;
}

.section--mostPopular .articleSnippet-list li {
  position: relative;
  padding-left: 46px;
}

.section--mostPopular .articleSnippet-list li + li {
  margin-top: 21px;
}

.section--mostPopular .articleSnippet-list li::before {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0.1;
  width: 33px;
  text-align: right;
  font-family: proxima-nova, sans-serif;
  font-size: 2.3125rem;
  line-height: 1em;
  content: counter(li) ".";
  counter-increment: li;
}

.section--sponsoredContent .articleSnippet-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.section--sponsoredContent .articleSnippet-item + .articleSnippet-item {
  margin-top: 26px;
}

.section--sponsoredContent .articleSnippet-thumb {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 100px;
          flex: 0 0 100px;
  max-width: 100px;
}
@media (min-width: 23.4375em) {
  .section--sponsoredContent .articleSnippet-thumb {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 120px;
            flex: 0 0 120px;
    max-width: 120px;
  }
}

.section--sponsoredContent .articleSnippet-title a {
  text-decoration: none;
  font-weight: 600;
  line-height: 1.3125rem;
}

.section--sponsoredContent .articleSnippet-content {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 calc(100% - 115px);
          flex: 0 0 calc(100% - 115px);
}
@media (min-width: 23.4375em) {
  .section--sponsoredContent .articleSnippet-content {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 calc(100% - 140px);
            flex: 0 0 calc(100% - 140px);
  }
}

@media (min-width: 64em) {
  .page--competition-list .main-content {
    -ms-flex-preferred-size: 100%;
        flex-basis: 100%;
    max-width: 100%;
  }
}

@media (min-width: 64em) {
  .page--competition-list .sidebar {
    margin-top: 0.875em;
  }
}

@media (min-width: 41.6875em) {
  .page--competition-list .main-content + .main-content {
    margin-top: 1.375em;
  }
}
@media (min-width: 64em) {
  .page--competition-list .main-content + .main-content {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 calc(100% - 19.625em);
            flex: 0 0 calc(100% - 19.625em);
    margin-top: 0.875em;
    max-width: calc(100% - 19.625em);
  }
}

@media (min-width: 41.6875em) {
  .page--competition-list .article-body {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }
}

@media (min-width: 41.6875em) {
  .page--competition-list .main-content .articleSnippet-item {
    -ms-flex-preferred-size: calc(33.33% - 0.4375em);
        flex-basis: calc(33.33% - 0.4375em);
    margin-top: 0;
    margin-bottom: 20px;
    max-width: calc(33.33% - 0.4375em);
  }
}
@media (min-width: 64em) {
  .page--competition-list .main-content .articleSnippet-item {
    -ms-flex-preferred-size: calc(50% - 0.4375em);
        flex-basis: calc(50% - 0.4375em);
    max-width: calc(50% - 0.4375em);
  }
}

@media (min-width: 41.6875em) {
  .page--competition-list .main-content .articleSnippet-item + .articleSnippet-item {
    border-top: 0;
    padding-top: 0;
  }
}

@media (min-width: 41.6875em) {
  .page--competition-list .main-content .articleSnippet-content,
.page--competition-list .main-content .articleSnippet-thumb {
    -ms-flex-preferred-size: 100%;
        flex-basis: 100%;
    max-width: 100%;
  }
}

@media (min-width: 41.6875em) {
  .page--competition-list .main-content .articleSnippet-content {
    margin-top: 10px;
  }
}

.page--competition-list .main-content .articleSnippet-item--fullBg {
  margin-right: -0.625em;
  margin-left: -0.625em;
}
@media (min-width: 23.4375em) {
  .page--competition-list .main-content .articleSnippet-item--fullBg {
    margin-right: -1.4375em;
    margin-left: -1.4375em;
  }
}
@media (min-width: 41.6875em) {
  .page--competition-list .main-content .articleSnippet-item--fullBg {
    -ms-flex-preferred-size: calc(50% - 0.6875em);
        flex-basis: calc(50% - 0.6875em);
    max-width: calc(50% - 0.6875em);
    margin: 0 0 20px;
  }
}
@media (min-width: 64em) {
  .page--competition-list .main-content .articleSnippet-item--fullBg {
    -ms-flex-preferred-size: calc(50% - 0.4375em);
        flex-basis: calc(50% - 0.4375em);
    max-width: calc(50% - 0.4375em);
    margin-bottom: 0.875em;
  }
}

.page--competition-list .main-content .articleSnippet-item--fullBg + .articleSnippet-item--fullBg {
  border-top: 0;
  margin-top: 20px;
  padding-top: 0;
}
@media (min-width: 41.6875em) {
  .page--competition-list .main-content .articleSnippet-item--fullBg + .articleSnippet-item--fullBg {
    margin-top: 0;
  }
}

@media (min-width: 41.6875em) {
  .page--competition-list .main-content .articleSnippet-item--fullBg:nth-of-type(3),
.page--competition-list .main-content .articleSnippet-item--fullBg:nth-of-type(4) {
    margin-bottom: 0;
  }
}

.page--competition-list .articleSnippet-item--fullBg .articleSnippet-thumb {
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
  max-width: 100%;
  min-height: 196px;
}

.page--competition-list .articleSnippet-item--fullBg .articleSnippet-content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
  width: 100%;
  max-width: 100%;
}
@media (min-width: 41.6875em) {
  .page--competition-list .articleSnippet-item--fullBg .articleSnippet-content {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    margin-top: 0;
  }
}

@media (min-width: 64em) {
  .page--competition-list .sidebar {
    -ms-flex-preferred-size: 18.75em;
        flex-basis: 18.75em;
    max-width: 18.75em;
  }
}

@media (min-width: 64em) {
  .page--competition-list .sidebar .section {
    margin-right: 10px;
    margin-bottom: 20px;
    margin-left: 10px;
  }
}

@media (min-width: 64em) {
  .page--competition-list .sidebar .section + .section {
    margin-top: 0;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/