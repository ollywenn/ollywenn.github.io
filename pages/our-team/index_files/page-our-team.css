.authorSnippet-details > :first-child {
  margin-top: 0;
}

.authorSnippet-details > :last-child {
  margin-bottom: 0;
}

.authorSnippet-details > :first-child {
  margin-top: 0;
}

.authorSnippet-details > :last-child {
  margin-bottom: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-family: fira-sans, sans-serif;
  font-weight: 400;
}

p {
  margin-bottom: 0;
}

.authorSnippet-title,
.authorSnippet-position {
  color: #212426;
  font-size: 1rem;
  line-height: 1.625rem;
}

.filter {
  margin-top: 30px;
}

.filter-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-transform: translate(-10px, -10px);
          transform: translate(-10px, -10px);
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.filter-item {
  margin-top: 10px;
  margin-left: 10px;
  border: 0;
  border-radius: 15px;
  background-color: #f2f2f2;
  padding: 6px 13px;
  color: #212426;
  font-size: 0.875rem;
  line-height: 1.0625rem;
}

.filter-item.is-active {
  background-color: #e21235;
  color: #fff;
}

.authorSnippet {
  background-color: #f2f2f2;
  max-width: 200px;
  text-decoration: none;
}

.authorSnippet-item {
  margin: 0;
}

.authorSnippet-item img {
  display: block;
}

.authorSnippet-details {
  padding: 13px 18px;
}

.authorSnippet-title {
  font-weight: 700;
}

.authorSnippet-position {
  font-weight: 400;
}

@media (min-width: 64em) {
  .page--our-team .main-content {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 750px;
            flex: 0 0 750px;
    max-width: 750px;
  }
}

.article--ourTeam .ourTeam-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-top: 40px;
}

.article--ourTeam .authorSnippet {
  display: none;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 calc(50% - 0.3125em);
          flex: 0 0 calc(50% - 0.3125em);
  margin-bottom: 0.625em;
  max-width: calc(50% - 0.3125em);
}
@media (min-width: 41.6875em) {
  .article--ourTeam .authorSnippet {
    -ms-flex-preferred-size: calc(33.33% - 0.6875em);
        flex-basis: calc(33.33% - 0.6875em);
    margin-bottom: 1.375em;
    max-width: calc(33.33% - 0.6875em);
  }
}
@media (min-width: 64em) {
  .article--ourTeam .authorSnippet {
    -ms-flex-preferred-size: calc(25% - 0.72625em);
        flex-basis: calc(25% - 0.72625em);
    margin-bottom: 0.875em;
    max-width: calc(25% - 0.72625em);
  }
}

.article--ourTeam .authorSnippet.is-active {
  display: block;
}

.article--ourTeam .filter + p {
  margin-top: 22px;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/