.accordion-wrapper ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-bottom: 25px;
  padding: 0;
  width: 100%;
  height: 32px;
  list-style: none;
}

.accordion-wrapper li + li {
  margin-left: 15px;
}
@media (min-width: 48em) {
  .accordion-wrapper li + li {
    margin-left: 35px;
  }
}

.accordion-wrapper li a {
  border-bottom: 3px solid transparent;
  text-decoration: none;
  color: lightgrey;
  font-size: 1.125rem;
}

.accordion-wrapper li a.active {
  border-bottom: 3px solid #e21235;
  color: #e21235;
}

.accordion-wrapper li a.active:hover {
  color: #e21235;
}

.accordion-tab {
  -webkit-transition: all 0.4s ease-in-out;
  transition: all 0.4s ease-in-out;
  opacity: 0;
  overflow: hidden;
  height: 0;
}

.accordion-tab.show {
  opacity: 1;
  height: auto;
  min-height: 1000px;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvdHd1YWUvc2Nzcy9wYWdlcy9wYWdlLXByb2ZpbGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYnJlYWtwb2ludC1zYXNzL3N0eWxlc2hlZXRzL19icmVha3BvaW50LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3R3dWFlL3Njc3MvMV9nbG9iYWwvX2NvbG9ycy5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9jb3JlL3Njc3MvdG9vbGJveC9fdG9vbGJveC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0k7RUFBQTtFQUFBO0VBQ0E7TUFBQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7Q0FESjs7QUFHQTtFQUNJO0NBQUo7QUNvREk7RURyREo7SUFHUTtHQUVOO0NBQ0Y7O0FBQUE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtDQUdKOztBQUVBO0VBQ0k7RUFDQSxlRUZHO0NGR1A7O0FBQ0E7RUFDSSxlRUxHO0NGT1A7O0FBQUE7RUdDSTtFQUFBO0VIQ0E7RUFDQTtFQUNBO0NBR0o7O0FBREE7RUFDSTtFQUNBO0VBQ0EiLCJmaWxlIjoiL3R3dWFlL2Nzcy9wYWdlLXByb2ZpbGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vdG9vbGJveC90b29sYm94JztcblxuLmFjY29yZGlvbi13cmFwcGVyIHVsIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xuICAgIHBhZGRpbmc6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAzMnB4O1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG4uYWNjb3JkaW9uLXdyYXBwZXIgbGkgKyBsaSB7XG4gICAgbWFyZ2luLWxlZnQ6IDE1cHg7XG4gICAgQGluY2x1ZGUgYnAobWQpIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDM1cHg7XG4gICAgfVxufVxuLmFjY29yZGlvbi13cmFwcGVyIGxpIGEge1xuICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6IGxpZ2h0Z3JleTtcbiAgICBmb250LXNpemU6IHJjKDE4KTtcbn1cbi8vIC5hY2NvcmRpb24td3JhcHBlciBsaSBhOmhvdmVyIHtcbi8vICAgICBjb2xvcjogbGlnaHRwaW5rO1xuLy8gfVxuLmFjY29yZGlvbi13cmFwcGVyIGxpIGEuYWN0aXZlIHtcbiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgJHJlZDE7XG4gICAgY29sb3I6ICRyZWQxO1xufVxuLmFjY29yZGlvbi13cmFwcGVyIGxpIGEuYWN0aXZlOmhvdmVyIHtcbiAgICBjb2xvcjogJHJlZDE7XG59XG4uYWNjb3JkaW9uLXRhYiB7XG4gICAgQGluY2x1ZGUgYW5pbWF0ZTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgaGVpZ2h0OiAwO1xufVxuLmFjY29yZGlvbi10YWIuc2hvdyB7XG4gICAgb3BhY2l0eTogMTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgbWluLWhlaWdodDogMTAwMHB4O1xufVxuIiwiLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBEZWZhdWx0IFZhcmlhYmxlc1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4kQnJlYWtwb2ludC1TZXR0aW5nczogKFxuICAnZGVmYXVsdCBtZWRpYSc6IGFsbCxcbiAgJ2RlZmF1bHQgZmVhdHVyZSc6IG1pbi13aWR0aCxcbiAgJ2RlZmF1bHQgcGFpcic6IHdpZHRoLFxuXG4gICdmb3JjZSBhbGwgbWVkaWEgdHlwZSc6IGZhbHNlLFxuICAndG8gZW1zJzogZmFsc2UsXG4gICd0cmFuc2Zvcm0gcmVzb2x1dGlvbnMnOiB0cnVlLFxuXG4gICdubyBxdWVyaWVzJzogZmFsc2UsXG4gICdubyBxdWVyeSBmYWxsYmFja3MnOiBmYWxzZSxcblxuICAnYmFzZSBmb250IHNpemUnOiAxNnB4LFxuXG4gICdsZWdhY3kgc3ludGF4JzogZmFsc2Vcbik7XG5cbiRicmVha3BvaW50OiAoKSAhZGVmYXVsdDtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBJbXBvcnRzXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbkBpbXBvcnQgXCJicmVha3BvaW50L3NldHRpbmdzXCI7XG5AaW1wb3J0ICdicmVha3BvaW50L2NvbnRleHQnO1xuQGltcG9ydCAnYnJlYWtwb2ludC9oZWxwZXJzJztcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvcGFyc2Vycyc7XG5AaW1wb3J0ICdicmVha3BvaW50L25vLXF1ZXJ5JztcblxuQGltcG9ydCAnYnJlYWtwb2ludC9yZXNwb25kLXRvJztcblxuQGltcG9ydCBcImJyZWFrcG9pbnQvbGVnYWN5LXNldHRpbmdzXCI7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gQnJlYWtwb2ludCBNaXhpblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbkBtaXhpbiBicmVha3BvaW50KCRxdWVyeSwgJG5vLXF1ZXJ5OiBmYWxzZSkge1xuICBAaW5jbHVkZSBsZWdhY3ktc2V0dGluZ3Mtd2FybmluZztcblxuICAvLyBSZXNldCBjb250ZXh0c1xuICBAaW5jbHVkZSBwcml2YXRlLWJyZWFrcG9pbnQtcmVzZXQtY29udGV4dHMoKTtcblxuICAkYnJlYWtwb2ludDogYnJlYWtwb2ludCgkcXVlcnksIGZhbHNlKTtcblxuICAkcXVlcnktc3RyaW5nOiBtYXAtZ2V0KCRicmVha3BvaW50LCAncXVlcnknKTtcbiAgJHF1ZXJ5LWZhbGxiYWNrOiBtYXAtZ2V0KCRicmVha3BvaW50LCAnZmFsbGJhY2snKTtcblxuICAkcHJpdmF0ZS1icmVha3BvaW50LWNvbnRleHQtaG9sZGVyOiBtYXAtZ2V0KCRicmVha3BvaW50LCAnY29udGV4dCBob2xkZXInKSAhZ2xvYmFsO1xuICAkcHJpdmF0ZS1icmVha3BvaW50LXF1ZXJ5LWNvdW50OiBtYXAtZ2V0KCRicmVha3BvaW50LCAncXVlcnkgY291bnQnKSAhZ2xvYmFsO1xuXG4gIC8vIEFsbG93IGZvciBhbiBhcy1uZWVkZWQgb3ZlcnJpZGUgb3IgdXNhZ2Ugb2Ygbm8gcXVlcnkgZmFsbGJhY2suXG4gIEBpZiAkbm8tcXVlcnkgIT0gZmFsc2Uge1xuICAgICRxdWVyeS1mYWxsYmFjazogJG5vLXF1ZXJ5O1xuICB9XG5cbiAgQGlmICRxdWVyeS1mYWxsYmFjayAhPSBmYWxzZSB7XG4gICAgJGNvbnRleHQtc2V0dGVyOiBwcml2YXRlLWJyZWFrcG9pbnQtc2V0LWNvbnRleHQoJ25vLXF1ZXJ5JywgJHF1ZXJ5LWZhbGxiYWNrKTtcbiAgfVxuXG4gIC8vIFByaW50IE91dCBRdWVyeSBTdHJpbmdcbiAgQGlmIG5vdCBicmVha3BvaW50LWdldCgnbm8gcXVlcmllcycpIHtcbiAgICBAbWVkaWEgI3skcXVlcnktc3RyaW5nfSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxuICBAaWYgYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJ5IGZhbGxiYWNrcycpICE9IGZhbHNlIG9yIGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyaWVzJykgPT0gdHJ1ZSB7XG5cbiAgICAkdHlwZTogdHlwZS1vZihicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykpO1xuICAgICRwcmludDogZmFsc2U7XG5cbiAgICBAaWYgKCR0eXBlID09ICdib29sJykge1xuICAgICAgJHByaW50OiB0cnVlO1xuICAgIH1cbiAgICBAZWxzZSBpZiAoJHR5cGUgPT0gJ3N0cmluZycpIHtcbiAgICAgIEBpZiAkcXVlcnktZmFsbGJhY2sgPT0gYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJ5IGZhbGxiYWNrcycpIHtcbiAgICAgICAgJHByaW50OiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSBpZiAoJHR5cGUgPT0gJ2xpc3QnKSB7XG4gICAgICBAZWFjaCAkd3JhcHBlciBpbiBicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykge1xuICAgICAgICBAaWYgJHF1ZXJ5LWZhbGxiYWNrID09ICR3cmFwcGVyIHtcbiAgICAgICAgICAkcHJpbnQ6IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBXcml0ZSBGYWxsYmFja1xuICAgIEBpZiAoJHF1ZXJ5LWZhbGxiYWNrICE9IGZhbHNlKSBhbmQgKCRwcmludCA9PSB0cnVlKSB7XG4gICAgICAkdHlwZS1mYWxsYmFjazogdHlwZS1vZigkcXVlcnktZmFsbGJhY2spO1xuXG4gICAgICBAaWYgKCR0eXBlLWZhbGxiYWNrICE9ICdib29sJykge1xuICAgICAgICAjeyRxdWVyeS1mYWxsYmFja30gJiB7XG4gICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgQGluY2x1ZGUgcHJpdmF0ZS1icmVha3BvaW50LXJlc2V0LWNvbnRleHRzKCk7XG59XG5cblxuQG1peGluIG1xKCRxdWVyeSwgJG5vLXF1ZXJ5OiBmYWxzZSkge1xuICBAaW5jbHVkZSBicmVha3BvaW50KCRxdWVyeSwgJG5vLXF1ZXJ5KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbiIsIi8vIGFkZCBhbGwgY29sb3VycyB3aXRoIHZhcmlhYmxlc1xuJHdoaXRlOiAjZmZmO1xuJHdoaXRlMTogI2YyZjJmMjsgLy9zb2NpYWwgbWVkaWEgYm9yZGVyIG9uIGZvb3RlclxuJHdoaXRlMjogI2ZhZmFmYTsgLy9zb2NpYWwgbWVkaWEgYm9yZGVyIG9uIGZvb3RlclxuXG4kYmxhY2s6ICMwMDA7XG4kYmxhY2sxOiAjMWQyMDIyO1xuXG4kZ3JleTA6ICNjY2M7XG4kZ3JleTE6ICMyMzIzMjM7XG4kZ3JleTI6ICMyMTI0MjY7XG4kZ3JleTM6ICM5ODk4OTg7XG4kZ3JleTQ6ICM5OTk7XG4kZ3JleTU6ICM5ZTllOWU7XG4kZ3JleTY6ICMxNDE0MTQ7XG4kZ3JleTc6ICM2NzY3Njc7XG4kZ3JleTg6ICMyZDJkMmQ7XG4kZ3JleTk6ICM3NDc0NzQ7XG4kZ3JleTEwOiAjNzA3MDcwO1xuJGdyZXkxMTogIzAwMDAwMDI5O1xuJGdyZXkxMjogI2M5YzljOTtcbiRncmV5MTM6ICNiY2JkYmQ7XG4kZ3JleTE0OiAjZjJmMmYyO1xuJGdyZXkxNTogI2IzYjRiNDtcblxuJHJlZDA6ICNmYTBjMGM7XG4kcmVkMTogI2UyMTIzNTtcbiRyZWQyOiAjZGIwODEyO1xuJHJlZDM6ICNiZDFmMjM7XG4iLCIvLyBzYXNzLWxpbnQ6ZGlzYWJsZS1hbGxcbkBpbXBvcnQgJ25vZGVfbW9kdWxlcy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvYnJlYWtwb2ludCc7XG5cbiRicm93c2VyLWNvbnRleHQ6IDE2ICFkZWZhdWx0O1xuXG4lZml4LWZpcnN0LWl0ZW0ge1xuICAgICYgPiA6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgIH1cbn1cbiVmaXgtbGFzdC1pdGVtIHtcbiAgICAmID4gOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cbn1cbiVmaXgtcGFkZGluZyB7XG4gICAgQGV4dGVuZCAlZml4LWZpcnN0LWl0ZW07XG4gICAgQGV4dGVuZCAlZml4LWxhc3QtaXRlbTtcbn1cbkBtaXhpbiBmaXhQYWRkaW5nKCkge1xuICAgIEBleHRlbmQgJWZpeC1maXJzdC1pdGVtO1xuICAgIEBleHRlbmQgJWZpeC1sYXN0LWl0ZW07XG59XG5AbWl4aW4gZml4RmxvYXQge1xuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnLic7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgY2xlYXI6IGJvdGg7XG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICB9XG59XG5AbWl4aW4gYW5pbWF0ZSB7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZS1pbi1vdXQ7XG59XG5AbWl4aW4gYW5pbWF0ZVByb3BlcnR5KCRwcm9wZXJ0eTogYWxsLCAkdGltZTogMC40KSB7XG4gICAgdHJhbnNpdGlvbjogJHByb3BlcnR5ICgkdGltZSkgKyBzIGVhc2UtaW4tb3V0O1xufVxuQG1peGluIGFuaW1hdGVQcm9wZXJ0eURlbGF5KCRwcm9wZXJ0eTogYWxsLCAkdGltZTogMC40LCAkZGVsYXk6IDAuMikge1xuICAgIHRyYW5zaXRpb246ICRwcm9wZXJ0eSAoJHRpbWUpICsgcyBlYXNlLWluLW91dCAoJGRlbGF5KSArIHM7XG59XG5AbWl4aW4gd29yZC13cmFwKCkge1xuICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gICAgaHlwaGVuczogYXV0bztcbn1cbkBtaXhpbiBlbGxpcHNpcygpIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG59XG4vL2NhbGN1bGV0ZSBwZXJjZW50YWdlIG51bWJlcnNcbkBmdW5jdGlvbiBjYWxjLXBlcmNlbnQoJHRhcmdldCwgJGNvbnRhaW5lcikge1xuICAgIEByZXR1cm4gKCR0YXJnZXQgLyAkY29udGFpbmVyKSAqIDEwMCU7XG59XG4vL3Nob3J0IHZlcnNpb24gb2YgY2FsYy1wZXJjZW50XG5AZnVuY3Rpb24gY3AoJHRhcmdldCwgJGNvbnRhaW5lcikge1xuICAgIEByZXR1cm4gY2FsYy1wZXJjZW50KCR0YXJnZXQsICRjb250YWluZXIpO1xufVxuLy8gdHJhbnNmb3JtIHBpeGVscyBpbiBlbXMgKHdpdGggb3Igd2l0aG91dCBweCBpbiB0aGUgZW5kKS4gVXNhZ2U6IGVtKDEycHgpIG9yIGVtKDEyKVxuQGZ1bmN0aW9uIGVtKCRwaXhlbHMsICRjb250ZXh0OiAkYnJvd3Nlci1jb250ZXh0KSB7XG4gICAgQGlmICh1bml0bGVzcygkcGl4ZWxzKSkge1xuICAgICAgICAkcGl4ZWxzOiAkcGl4ZWxzICogMXB4O1xuICAgIH1cbiAgICBAaWYgKHVuaXRsZXNzKCRjb250ZXh0KSkge1xuICAgICAgICAkY29udGV4dDogJGNvbnRleHQgKiAxcHg7XG4gICAgfVxuXG4gICAgQHJldHVybiAkcGl4ZWxzIC8gJGNvbnRleHQgKiAxZW07XG59XG4vLyBtZWRpYSBxdWVyaWVzXG5AbWl4aW4gYnAoJHBvaW50KSB7XG4gICAgQGlmICRwb2ludCA9PSBzbSB7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHNtKSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHBvaW50ID09IHNtZCB7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHNtZCkge1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwb2ludCA9PSBtZCB7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJG1kKSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHBvaW50ID09IHhtZCB7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHhtZCkge1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwb2ludCA9PSBsZyB7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGxnKSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHBvaW50ID09IHhsZyB7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHhsZykge1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwb2ludCA9PSB4eGxnIHtcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkeHhsZykge1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwb2ludCA9PSB4eHhsZyB7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHh4eGxnKSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHBvaW50ID09IHdpZGUge1xuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCR3aWRlKSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHBvaW50ID09IGxhcmdlc3Qge1xuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRsYXJnZXN0KSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHBvaW50ID09IHNob3J0IHtcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkc2hvcnQpIHtcbiAgICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgfSBAZWxzZSBpZiAkcG9pbnQgPT0gcmV0aW5hIHtcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSxcbiAgICAgICAgICAgIG9ubHkgc2NyZWVuIGFuZCAobWluLS1tb3otZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSxcbiAgICAgICAgICAgIG9ubHkgc2NyZWVuIGFuZCAoLW8tbWluLWRldmljZS1waXhlbC1yYXRpbzogMi8xKSxcbiAgICAgICAgICAgIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksXG4gICAgICAgICAgICBvbmx5IHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpLFxuICAgICAgICAgICAgb25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjogMmRwcHgpIHtcbiAgICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgfSBAZWxzZSB7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoZW0oJHBvaW50KSkge1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5AZnVuY3Rpb24gaW1hZ2UtdXJsKCRpbWFnZS1uYW1lKSB7XG4gICAgQHJldHVybiB1cmwoJGltYWdlUGF0aCskaW1hZ2UtbmFtZSk7XG59XG4vLyBUT0RPOiBpbXBsZW1lbnQgd2l0aCBhIGRlZmF1bHQgYm9keSBmb250IHNpemVcbkBmdW5jdGlvbiByZW0tY2FsYygkc2l6ZSkge1xuICAgICRyZW1TaXplOiAkc2l6ZSAvIDE2O1xuICAgIEByZXR1cm4gI3skcmVtU2l6ZX1yZW07XG59XG5AZnVuY3Rpb24gcmMoJHNpemUpIHtcbiAgICBAcmV0dXJuIHJlbS1jYWxjKCRzaXplKTtcbn1cbkBmdW5jdGlvbiBmb2N1c091dGxpbmUoJGNvbG9yOiAkYmxhY2ssICRwb3M6IGluc2V0KSB7XG4gICAgQHJldHVybiAkcG9zIDAgMCAwIDJweCAkY29sb3I7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9*/