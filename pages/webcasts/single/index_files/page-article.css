h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-family: fira-sans, sans-serif;
  font-weight: 400;
}

p {
  margin-bottom: 0;
}

.section--relatedTopics .relatedTopics-item a {
  text-decoration: none;
  color: #e21235;
  font-family: fira-sans, sans-serif;
  font-size: 1rem;
  font-weight: 500;
  line-height: 1.625rem;
}

.main-content .section--shareArticle {
  padding-bottom: 0;
}

.section--shareArticle .section-header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
@media (min-width: 35.625em) {
  .section--shareArticle .section-header {
    padding-top: 15.5px;
    padding-bottom: 15.5px;
  }
}

.section--shareArticle .section-title {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 100%;
          flex: 1 1 100%;
  padding-right: 10px;
  max-width: 100%;
}
@media (min-width: 35.625em) {
  .section--shareArticle .section-title {
    -ms-flex-preferred-size: 50%;
        flex-basis: 50%;
    max-width: 50%;
  }
}

.section--shareArticle .section-title + .sharingWidget {
  margin-top: 16px;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
}
@media (min-width: 25em) {
  .section--shareArticle .section-title + .sharingWidget {
    -ms-flex-preferred-size: 257px;
        flex-basis: 257px;
    max-width: 257px;
  }
}
@media (min-width: 35.625em) {
  .section--shareArticle .section-title + .sharingWidget {
    margin-top: 0;
  }
}

@media (min-width: 35.625em) {
  .section--shareArticle .sharingWidget-link {
    width: 33px;
    height: 33px;
  }
}

.section--relatedTopics {
  padding-bottom: 18.5px;
}

.section--relatedTopics .section-header {
  padding-bottom: 13px;
}

.section--relatedTopics .relatedTopics-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-transform: translateX(-21px);
          transform: translateX(-21px);
  margin: 0;
  padding: 0;
  list-style-type: none;
}
@media (min-width: 64em) {
  .section--relatedTopics .relatedTopics-list {
    -webkit-transform: translateX(-23px);
            transform: translateX(-23px);
  }
}

.section--relatedTopics .relatedTopics-item {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  padding-left: 21px;
}
@media (min-width: 64em) {
  .section--relatedTopics .relatedTopics-item {
    padding-left: 23px;
  }
}

.section--relatedArticles .articleSnippet-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

@media (min-width: 41.6875em) {
  .section--relatedArticles .articleSnippet-item {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 calc(50% - 0.6875em);
            flex: 0 0 calc(50% - 0.6875em);
    max-width: calc(50% - 0.6875em);
  }
}

@media (min-width: 41.6875em) {
  .section--relatedArticles .articleSnippet-item + .articleSnippet-item {
    margin-top: 0;
    margin-bottom: 29px;
    border: 0;
    padding-top: 0;
  }
}

@media (min-width: 41.6875em) {
  .section--relatedArticles .articleSnippet-thumb {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    max-width: 100%;
  }
}

@media (min-width: 41.6875em) {
  .section--relatedArticles .articleSnippet-content {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    margin-top: 20px;
    max-width: 100%;
  }
}
@media (min-width: 64em) {
  .section--relatedArticles .articleSnippet-content {
    margin-top: 10px;
  }
}

@media (min-width: 41.6875em) {
  .section--relatedArticles .articleSnippet-title {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }
}

.section--relatedArticles .article-mediaList {
  margin-top: 10px;
}

.section--relatedArticles-spotlight .section-header {
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

@media (min-width: 41.6875em) {
  .section--relatedArticles-spotlight .articleSnippet-item {
    -ms-flex-preferred-size: calc(33.33% - 0.6875em);
        flex-basis: calc(33.33% - 0.6875em);
    max-width: calc(33.33% - 0.6875em);
  }
}
@media (min-width: 64em) {
  .section--relatedArticles-spotlight .articleSnippet-item {
    -ms-flex-preferred-size: calc(33.33% - 0.525em);
        flex-basis: calc(33.33% - 0.525em);
    max-width: calc(33.33% - 0.525em);
  }
}

.locked-content {
  text-align: center;
  width: 100%;
  position: relative;
  height: 50px;
}

.locked-content:before {
  display: block;
  position: absolute;
  top: -220px;
  left: 0;
  background: #111111;
  background: -webkit-gradient(linear, left top, left bottom, from(rgba(255, 255, 255, 0)), to(white));
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, white 100%);
  width: 100%;
  height: 200px;
  content: "";
}

.locked-content:after {
  display: block;
  position: absolute;
  z-index: 1;
  border-bottom: 1px solid #000;
  width: 100%;
  height: 1px;
  content: "";
}

.lock-icon {
  position: absolute;
  top: -18px;
  left: calc(50% - 15px);
  background-image: url("/tc/img/lock.svg");
  background-size: 30px 28px;
  background-repeat: no-repeat;
  height: 30px;
  width: 28px;
  z-index: 2;
}

.paywall {
  text-align: center;
}

.paywall .title {
  width: 100%;
  max-width: 400px;
  margin: 0 auto;
}

.paywall .title h3 {
  font-size: 32px;
  font-weight: bold;
  line-height: 1;
  letter-spacing: -0.8px;
  text-align: center;
  color: #2d2d2d;
}

.paywall .title p {
  font-size: 16px;
  line-height: 1.63;
  text-align: center;
  color: #494949;
}

.paywall .already a,
.paywall .already p {
  font-size: 16px;
  line-height: 1.63;
  text-align: center;
  color: #494949;
}

.paywall .already a {
  display: inline;
  font-weight: 500;
  color: #494949;
}

@media (min-width: 64em) {
  .page--article-single .main-segment > .wrapper {
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }
}

@media (min-width: 64em) {
  .page--article-single .main-content {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 calc(100% - 19.625em);
            flex: 0 0 calc(100% - 19.625em);
    max-width: calc(100% - 19.625em);
  }
}

.page--article-single .sidebar {
  margin-bottom: 50px;
}

.page--article-single .main-content .section {
  border-top: #f2f2f2 1px solid;
}

@media (min-width: 41.6875em) {
  .page--article-single .sidebar {
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
}

.page--article-single .sidebar-widget {
  display: none;
}

.page--article-single .sidebar-widget.section--mostPopular {
  display: block;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/