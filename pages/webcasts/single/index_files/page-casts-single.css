.listenOn > :first-child {
  margin-top: 0;
}

.listenOn > :last-child {
  margin-bottom: 0;
}

.listenOn > :first-child {
  margin-top: 0;
}

.listenOn > :last-child {
  margin-bottom: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-family: fira-sans, sans-serif;
  font-weight: 400;
}

p {
  margin-bottom: 0;
}

.listenOn {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin-top: 20px;
  max-width: 100%;
}

.listenOn-item {
  display: block;
  margin: 0 2.5px 16px;
  width: 100%;
  height: 58px;
  background: center center no-repeat;
  text-indent: -9999px;
}
@media (min-width: 23.4375em) {
  .listenOn-item {
    margin-bottom: 20px;
  }
}
@media (min-width: 41.6875em) {
  .listenOn-item {
    margin-right: 5px;
    margin-left: 5px;
  }
}
@media (min-width: 64em) {
  .listenOn-item {
    margin-right: 8px;
    margin-left: 8px;
  }
}

.listenOn-item--spotify {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 158px;
          flex: 0 0 158px;
  background-image: url("../img/listen-spotify.jpg");
  max-width: 158px;
}

.listenOn-item--apple {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 159px;
          flex: 0 0 159px;
  background-image: url("../img/listen-apple.jpg");
  max-width: 159px;
}

.listenOn-item--google {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 229px;
          flex: 0 0 229px;
  background-image: url("../img/listen-google.jpg");
  max-width: 229px;
}

@media (min-width: 64em) {
  .page--casts-single .main-content:last-of-type > .article {
    padding-bottom: 0;
  }
}

@media (min-width: 41.6875em) {
  .page--casts-single .sidebar {
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/